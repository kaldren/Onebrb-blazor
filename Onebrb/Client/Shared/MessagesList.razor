@using Onebrb.Shared.ViewModels.Message
@using Onebrb.Client.Options
@using Microsoft.Extensions.Configuration
@using System.Net.Http
@using System.Text
@using System.Text.Json
@using System.Text.Json.Serialization
@using System.Collections.Generic
@using System.IO
@inject IConfiguration Configuration
@inject HttpClient Http

<Notification CssClass="@CssClass" Message="@StatusMessage" />

@if (Model != null && Model.Count > 0)
{
    <form method="post">
        <table class="table table-striped">
            <thead>
                <tr>
                    <th scope="col">#</th>
                    <th scope="col">Title</th>
                    <th scope="col">Text</th>
                    <th scope="col">Date Sent</th>
                    <th scope="col">From</th>
                    <th scope="col"></th>
                </tr>
            </thead>
            <tbody>
                @for (int i = 0; i < Model.Count; i++)
                {
                    <tr>
                        <th scope="row">@(i+1)</th>
                        <td>@Model[i].Title</td>
                        <td>@Model[i].Body</td>
                        <td>@Model[i].DateSent</td>
                        <td>@Model[i].Author</td>
                        <td>
                            <a title="Reply" asp-action="Create" asp-route-id="@Model[i].Author" class="btn btn-success"><i class="fas fa-reply"></i></a>
                            <button title="Delete" asp-action="Delete" asp-route-id="@Model[i].Id" class="btn btn-danger"><i class="fas fa-trash-alt"></i></button>
                        </td>
                    </tr>
                }

            </tbody>
        </table>
    </form>

}
@code {
    public List<MessageViewModel> Model { get; set; }
    public MessageEndpointOptions ApiMessagesEndpoint { get; private set; }
    public bool IsSuccess { get; set; }
    public string CssClass { get; set; } = "alert alert-info";
    public string StatusMessage { get; set; } = "Loading...";

    protected override async Task OnInitializedAsync()
    {

        var messageEndpoint = Configuration
                                .GetSection(MessageEndpointOptions.ApiMessagesEndpoint)
                                .Get<MessageEndpointOptions>();

        Model = await Http.GetFromJsonAsync<List<MessageViewModel>>($"{messageEndpoint.GetAllMessages}");

        if (Model != null && Model.Count > 0)
        {
            StatusMessage = "All Messages";
        }
        else
        {
            StatusMessage = "Couldn't fetch your messages.";
        }
    }
}
