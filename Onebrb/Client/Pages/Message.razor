@page "/message"
@page "/message/{recipient}"
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@using Onebrb.Shared.ViewModels.Message;
@using System.Text;
@using System.Text.Json;
@using System.Text.Json.Serialization;
@attribute [Authorize]
@using System.Net.Http
@inject HttpClient Http

@if (!string.IsNullOrWhiteSpace(Recipient))
{
    <div class="message-form">
        <EditForm Model="@viewModel" OnValidSubmit="SendMessage">
            <DataAnnotationsValidator />
            <ValidationSummary />

            <h3>Messaging @Recipient</h3>

            <InputText type="hidden" @bind-Value="@Recipient" class="form-control"></InputText>
            <div class="form-group">
                Title:
                <InputText type="text" @bind-Value="@viewModel.Title" class="form-control"></InputText>
            </div>
            <div class="form-group">
                Text:
                <InputTextArea @bind-Value="@viewModel.Body" class="form-control"></InputTextArea>
            </div>
            <button class="btn btn-success"><i class="fas fa-paper-plane fas--space-right"></i>Send</button>
            <a class="btn btn-secondary"><i class="fas fa-window-close fas--space-right"></i>Cancel</a>
        </EditForm>
    </div>
}
else
{
    <p>All messages</p>
}


<p>@ResponseMessage</p>


@code {
    private CreateMessageViewModel viewModel = new CreateMessageViewModel();
    private HttpResponseMessage response;

    [Parameter]
    public string Recipient { get; set; }

    public string ResponseMessage { get; set; }

    private async Task SendMessage()
    {
        if (viewModel != null && Recipient != null)
        {
            // Set author & recipient
            viewModel.Author = "kaldren";
            viewModel.Recipient = Recipient;

            string jsonString = JsonSerializer.Serialize(viewModel);

            if (!string.IsNullOrEmpty(jsonString))
            {
                ResponseMessage = $"Sending message...";

                response = await Http.PostAsync("https://localhost:5001/api/Message", 
                    new StringContent(jsonString, Encoding.UTF8, "application/json"));

                if (response != null && response.IsSuccessStatusCode)
                {
                    ResponseMessage = "Message sent!";
                }
                else
                {
                    ResponseMessage = $"Couldn't send the message {viewModel.Body} - {viewModel.Title}, please try again.";
                }
            }
        }

    }

    protected override void OnInitialized()
    {
        Recipient = Recipient ?? "Bob";
    }
}
